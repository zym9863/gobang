name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送以 v 开头的标签时触发，如 v1.0.0
  workflow_dispatch:  # 允许手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows executable
        run: flutter build windows --release

      - name: Create Windows archive
        run: |
          cd build/windows/x64/runner/Release
          7z a -tzip ../../../../../gobang-windows-x64.zip .

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: gobang-windows-x64.zip

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.2'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release --split-per-abi

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: |
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk

  release:
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-release

      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Gobang ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## 🎮 五子棋游戏 - ${{ steps.get_version.outputs.VERSION }}
            
            ### 📦 下载说明
            - **Windows 用户**: 下载 `gobang-windows-x64.zip`，解压后运行 `gobang.exe`
            - **Android 用户**: 根据设备架构选择对应的 APK 文件
              - `app-arm64-v8a-release.apk`: 适用于大多数现代 Android 设备
              - `app-armeabi-v7a-release.apk`: 适用于较老的 ARM 设备
              - `app-x86_64-release.apk`: 适用于 x86_64 架构设备
            
            ### ✨ 功能特性
            - 经典五子棋游戏体验
            - 跨平台支持 (Windows/Android)
            - 简洁直观的用户界面
            
            ### 🚀 更新内容
            - 初始版本发布
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gobang-windows-x64.zip
          asset_name: gobang-windows-x64.zip
          asset_content_type: application/zip

      - name: Upload Android ARM64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-arm64-v8a-release.apk
          asset_name: gobang-arm64-v8a-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Android ARMv7a Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-armeabi-v7a-release.apk
          asset_name: gobang-armeabi-v7a-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Android x86_64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-x86_64-release.apk
          asset_name: gobang-x86_64-release.apk
          asset_content_type: application/vnd.android.package-archive
